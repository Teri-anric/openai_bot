# Generated by Django 5.0.6 on 2024-08-03 20:09

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="TelegramGroup",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("group_id", models.BigIntegerField(unique=True)),
                ("title", models.CharField(max_length=256)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="TelegramUser",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("user_id", models.BigIntegerField(unique=True)),
                ("first_name", models.CharField(max_length=100)),
                ("last_name", models.CharField(max_length=100, null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="InstructionGPT",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "gpt_model",
                    models.CharField(
                        choices=[
                            ("gpt-4o", "GPT-4o $5/$15"),
                            ("gpt-4o-2024-05-13", "GPT-4o-2024-05-13 $5/$15"),
                            ("gpt-4o-mini", "GPT-4o-mini $0.15/$0.6"),
                            (
                                "gpt-4o-mini-2024-07-18",
                                "GPT-4o-mini-2024-07-18 $0.15/$0.6",
                            ),
                            ("gpt-4-turbo", "GPT-4-turbo $10/$30"),
                            (
                                "gpt-4-turbo-2024-04-09",
                                "GPT-4-turbo-2024-04-09 $10/$30",
                            ),
                            ("gpt-4-0125-preview", "GPT-4-0125-preview $10/$30"),
                            ("gpt-4-turbo-preview", "GPT-4-turbo-preview $10/$30"),
                            ("gpt-4-1106-preview", "GPT-4-1106-preview $10/$30"),
                            ("gpt-4-vision-preview", "GPT-4-vision-preview $10/$30"),
                            ("gpt-4", "GPT-4 $30/$60"),
                            ("gpt-4-0314", "GPT-4-0314 $30/$60"),
                            ("gpt-4-0613", "GPT-4-0613 $30/$60"),
                            ("gpt-4-32k", "GPT-4-32k $60/$120"),
                            ("gpt-4-32k-0314", "GPT-4-32k-0314 $60/$120"),
                            ("gpt-4-32k-0613", "GPT-4-32k-0613 $60/$120"),
                            ("gpt-3.5-turbo", "GPT-3.5-turbo $0.5/$1.5"),
                            ("gpt-3.5-turbo-0301", "GPT-3.5-turbo-0301 $1.5/$2"),
                            ("gpt-3.5-turbo-0613", "GPT-3.5-turbo-0613 $1.5/$2"),
                            ("gpt-3.5-turbo-1106", "GPT-3.5-turbo-1106 $1/$2"),
                            ("gpt-3.5-turbo-0125", "GPT-3.5-turbo-0125 $0.5/$1.5"),
                            ("gpt-3.5-turbo-16k", "GPT-3.5-turbo-16k $3/$4"),
                            ("gpt-3.5-turbo-16k-0613", "GPT-3.5-turbo-16k-0613 $3/$4"),
                        ],
                        default="gpt-3.5-turbo",
                    ),
                ),
                (
                    "prompt_text",
                    models.TextField(default="Help with questions in the chat."),
                ),
                ("trigger_message_count", models.IntegerField(default=5)),
                ("context_message_count", models.IntegerField(default=10)),
                (
                    "telegram_group",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="telegram.telegramgroup",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="TelegramMessages",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("message_id", models.BigIntegerField()),
                ("text", models.TextField()),
                (
                    "group",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="telegram.telegramgroup",
                    ),
                ),
                (
                    "reply_to_message",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="replies",
                        to="telegram.telegrammessages",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="telegram.telegramuser",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="telegramgroup",
            name="admins",
            field=models.ManyToManyField(to="telegram.telegramuser"),
        ),
    ]
