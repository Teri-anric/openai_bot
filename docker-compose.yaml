version: '3.8'

networks:
  app_network:
    driver: bridge

services:
  db:
    image: postgres
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: md5
    volumes:
      - db_data:/var/lib/postgresql/data
    expose:
      - "5432"
    networks:
      - app_network

  redis:
    image: redis
    restart: always
    expose:
      - "6379"
    volumes:
      - redis_data:/data
    networks:
      - app_network

  backend:
    build: .
    restart: always
    command: ["bash", "/app/entrypoint.sh"]
    volumes:
      - .:/app
    env_file:
      - .env
    expose:
      - "8000"
    depends_on:
      - db
      - redis
    networks:
      - app_network

#  celery:
#    build: .
#    command: "celery -A clientHook worker --loglevel=info"
#    volumes:
#      - .:/app
#    depends_on:
#      - backend
#    networks:
#      - app_network
#

  nginx:
    restart: unless-stopped
    image: nginx
    container_name: nginx
    build:
      context: ./nginx
      dockerfile: ./Dockerfile
    env_file:
      - .env
    ports:
      - "80:80"
      - "443:443"
    volumes:
#      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./staticfiles:/app/staticfiles
    depends_on:
      - backend
    networks:
      - app_network

volumes:
  db_data:
  redis_data:
